% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/funs_initialize.R
\name{SP_initialize}
\alias{SP_initialize}
\title{Initialize StellarPath required python packages}
\usage{
SP_initialize(
  python_executable = NULL,
  virtualenv = NULL,
  condaenv = "SP_condaenv",
  ask = FALSE,
  refresh_settings = FALSE,
  save_profile = FALSE,
  check_env = TRUE,
  prompt = TRUE
)
}
\arguments{
\item{python_executable}{the full path to the Python executable, for which
StellarPath required python packages is installed.}

\item{virtualenv}{set a path to the Python virtual environment with StellarPath required python packages
installed Example: \code{virtualenv = "~/myenv"}}

\item{condaenv}{set a path to the anaconda virtual environment with StellarPath required python packages
installed Example: \code{condalenv = "myenv"}}

\item{ask}{logical; if \code{FALSE}, use the first StellarPath required python packages installation found;
if \code{TRUE}, list available StellarPath required python packages installations and prompt the user for
which to use. If another (e.g. \code{python_executable}) is set, then this
value will always be treated as \code{FALSE}.}

\item{refresh_settings}{logical; if \code{TRUE}, StellarPath will ignore the saved
settings in the profile and initiate a search of new settings.}

\item{save_profile}{logical; if \code{TRUE}, the current StellarPath required python packages setting will
be saved for the future use.}

\item{check_env}{logical; check whether conda/virtual environment generated
by \code{SP_install()} exists}

\item{prompt}{logical; asking whether user wants to set the environment as default.}
}
\description{
Initialize StellarPath required python packages to call from R.
Credits for this function go to spacyr R package: https://github.com/quanteda/spacyr/tree/master/R
Respect for these fellow R developers who developed a way to automatically create and detect a conda enviroment linked to
an R package. Hope that Reticulate will integrate this function in their standard package for the future.
}
